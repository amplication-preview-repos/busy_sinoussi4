/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GuestAttendance as PrismaGuestAttendance,
  Guest as PrismaGuest,
} from "@prisma/client";

export class GuestAttendanceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GuestAttendanceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.guestAttendance.count(args);
  }

  async guestAttendances(
    args: Prisma.GuestAttendanceFindManyArgs
  ): Promise<PrismaGuestAttendance[]> {
    return this.prisma.guestAttendance.findMany(args);
  }
  async guestAttendance(
    args: Prisma.GuestAttendanceFindUniqueArgs
  ): Promise<PrismaGuestAttendance | null> {
    return this.prisma.guestAttendance.findUnique(args);
  }
  async createGuestAttendance(
    args: Prisma.GuestAttendanceCreateArgs
  ): Promise<PrismaGuestAttendance> {
    return this.prisma.guestAttendance.create(args);
  }
  async updateGuestAttendance(
    args: Prisma.GuestAttendanceUpdateArgs
  ): Promise<PrismaGuestAttendance> {
    return this.prisma.guestAttendance.update(args);
  }
  async deleteGuestAttendance(
    args: Prisma.GuestAttendanceDeleteArgs
  ): Promise<PrismaGuestAttendance> {
    return this.prisma.guestAttendance.delete(args);
  }

  async getGuest(parentId: string): Promise<PrismaGuest | null> {
    return this.prisma.guestAttendance
      .findUnique({
        where: { id: parentId },
      })
      .guest();
  }
}
